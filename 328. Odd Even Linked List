class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode* evenh=NULL;
        ListNode* event=NULL;
        ListNode* oddh=NULL;
        ListNode* oddt=NULL;
        
        int count=1;
        while(head){
            if(count%2==0){
                if(!evenh){
                    evenh=head;
                    event=head;
                    head=head->next;
                }
                else{
                    event->next=head;
                    event=event->next;
                    head=head->next;
                }
            }
            else{
                if(!oddh){
                    oddh=head;
                    oddt=head;
                    head=head->next;
                }
                else{
                    oddt->next=head;
                    oddt=oddt->next;
                    head=head->next;
            }
        }
            count++;
        
        
    }
        if(!oddh)return evenh;
        if(!evenh)return oddh;
        
        event->next=NULL;
        oddt->next=evenh;
        return oddh;
}};
