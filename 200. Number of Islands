class Solution {
    char[][] grid;
    boolean[][] visited;
    public int numIslands(char[][] grid) {
        int r=grid.length;
        int c=grid[0].length;
        this.grid=grid;
        int count=0;
        this.visited=new boolean[r][c];
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(grid[i][j]=='0' || visited[i][j]){continue;}
                count++;
                dfs(i,j);
                
            }
        }
        return count;
        
    }
    public void dfs(int row,int col){
        if(row<0 || row>=grid.length || col<0 || col>=grid[0].length) return;
        
        if(visited[row][col])return;
        if(grid[row][col]=='0')return;
        
        visited[row][col]=true;
        
        dfs(row-1,col);
        dfs(row+1,col);
        dfs(row,col-1);
        dfs(row,col+1);
    }
}
